<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- Loading some constants -->
  <xacro:include filename="$(find uuv_descriptions)/urdf/common.urdf.xacro"/>
  <!-- Loading file with sensor macros -->
  <xacro:include filename="$(find uuv_sensor_ros_plugins)/urdf/sensor_snippets.xacro"/>
  <!-- Loading the UUV simulator ROS plugin macros -->
  <xacro:include filename="$(find uuv_gazebo_ros_plugins)/urdf/snippets.xacro"/>
  <!-- Loading vehicle's specific macros -->
  <xacro:include filename="$(find deepleng_description)/urdf/snippets.xacro"/>

  <!--
    Vehicle's parameters (remember to enter the model parameters below)
  -->

  <xacro:property name="mass" value="185.0"/> <!--eigentlich 115.957-->
  <!-- Center of gravity -->
  <xacro:property name="cog" value="-0.05811 -0.00029 0.00492"/>
  <!-- Fluid density -->
  <xacro:property name="rho" value="1028"/>

  <!--
    Visual mesh file for the vehicle, usually in DAE (Collada) format. Be sure to store the
    mesh with the origin of the mesh on the same position of the center of mass, otherwise
    the mesh pose will have to be corrected below in the <visual> block.
    Open the meshes for the RexROV vehicle in Blender to see an example on the mesh placement.
  -->
  <xacro:property name="visual_mesh_file" value="file://$(find deepleng_description)/meshes/body.dae"/>
  <!-- <xacro:property name="visual_mesh_file_x_thruster" value="file://$(find deepleng_description)/meshes/x_thruster.dae"/> -->
  <!-- <xacro:property name="visual_mesh_file_y_thruster" value="file://$(find deepleng_description)/meshes/y_thruster.dae"/> -->


  <!-- Collision geometry mesh, usually in STL format (it is recommended to keep
  this geometry as simple as possible to improve the performance the physics engine
  regarding the computation of collision forces) -->
  <xacro:property name="collision_mesh_file" value="file://$(find deepleng_description)/meshes/body.stl"/>
  <!-- <xacro:property name="collision_mesh_file_x_thruster" value="file://$(find deepleng_description)/meshes/x_thruster.stl"/> -->
  <!-- <xacro:property name="collision_mesh_file_y_thruster" value="file://$(find deepleng_description)/meshes/y_thruster.stl"/> -->

  <!-- <link name="dummy">
  </link> -->

  <!-- Vehicle macro -->
  <xacro:macro name="deepleng_base" params="namespace *gazebo">

      <!-- Rigid body description of the base link -->
      <link name="${namespace}/base_link">
        <!--
          Be careful to setup the coefficients for the inertial tensor,
          otherwise your model will become unstable on Gazebo
        -->
        <inertial>
          <mass value="${mass}" />
          <origin xyz="${cog}" rpy="0 0 0"/>
          <inertia ixx="1.368" ixy="0" ixz="0"
                   iyy="87" iyz="0"
                   izz="87" />
        </inertial>

        <visual>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
            <mesh filename="${visual_mesh_file}" scale="1 1 1" />
          </geometry>
        </visual>

        <collision>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
            <mesh filename="${collision_mesh_file}" scale="1 1 1" />
          </geometry>
        </collision>
      </link>
<!-- ================================================================================ -->
      <!-- <link name="${namespace}/x_thruster_link">

        <inertial>
          <mass value="0.01" />
          <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
          <inertia ixx="0.001" ixy="0" ixz="0"
                   iyy="0.001" iyz="0"
                   izz="0.001" />
        </inertial>

        <visual>
          <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
          <geometry>
            <mesh filename="${visual_mesh_file_x_thruster}" scale="1 1 1" />
          </geometry>
        </visual>

        <collision>
          <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
          <geometry>
            <mesh filename="${collision_mesh_file_x_thruster}" scale="1 1 1" />
          </geometry>
        </collision>
      </link> -->
<!-- ================================================================================ -->
      <!-- <link name="${namespace}/y_thruster_rear_link">

        <inertial>
          <mass value="0.01" />
          <origin xyz="-0.85737 0 0" rpy="0.0 0.0 0.0"/>
          <inertia ixx="0.001" ixy="0" ixz="0"
                   iyy="0.001" iyz="0"
                   izz="0.001" />
        </inertial>

        <visual>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
            <mesh filename="${visual_mesh_file_y_thruster}" scale="1 1 1" />
          </geometry>
        </visual>

        <collision>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
            <mesh filename="${collision_mesh_file_y_thruster}" scale="1 1 1" />
          </geometry>
        </collision>
      </link> -->
<!-- ================================================================================ -->
      <!-- <link name="${namespace}/y_thruster_front_link">

        <inertial>
          <mass value="0.01" />
          <origin xyz="-0.85737 0 0" rpy="0.0 0.0 0.0"/>
          <inertia ixx="0.001" ixy="0" ixz="0"
                   iyy="0.001" iyz="0"
                   izz="0.001" />
        </inertial>

        <visual>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
            <mesh filename="${visual_mesh_file_y_thruster}" scale="1 1 1" />
          </geometry>
        </visual>

        <collision>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
            <mesh filename="${collision_mesh_file_y_thruster}" scale="1 1 1" />
          </geometry>
        </collision>
      </link> -->
<!-- ================================================================================ -->

      <!-- <joint name="dummy_joint" type="fixed">
         <parent link="dummy"/>
         <child link="${namespace}/base_link"/>
      </joint> -->

      <!-- <joint name="x_thruster_joint" type="continuous">
        <origin rpy="0.0 0.0 0.0" xyz="-1.49 0 0"/>
        <parent link="${namespace}/base_link"/>
        <child link="${namespace}/x_thruster_link"/>
        <axis xyz="0.0 0.0 1.0"/>
      </joint> -->

      <!-- <joint name="y_thruster_rear_joint" type="continuous">
        <origin rpy="0.0 0.0 0.0" xyz="-0.85737 0 0"/>
        <parent link="${namespace}/base_link"/>
        <child link="${namespace}/y_thruster_rear_link"/>
        <axis xyz="0.0 0.0 1.0"/>
      </joint> -->

      <!-- <joint name="collision_body_front_joint" type="fixed">
        <origin rpy="0.0 0.0 0.0" xyz="0 0 0"/>
        <parent link="${namespace}/base_link"/>
        <child link="${namespace}/collision_body_front_link"/>
        <axis xyz="0.0 0.0 0"/>
      </joint> -->

    <gazebo reference="${namespace}/base_link">
      <selfCollide>false</selfCollide>
    </gazebo>

    <!-- Set up hydrodynamic plugin given as input parameter -->
    <xacro:insert_block name="gazebo"/>

    <!-- Include the thruster modules -->
    <xacro:include filename="$(find deepleng_description)/urdf/actuators.xacro"/>

    <!-- Include the sensor modules -->
    <xacro:include filename="$(find deepleng_description)/urdf/sensors.xacro"/>

  </xacro:macro>

</robot>
