<launch>
  <!-- Debug flag -->
  <arg name="debug" default="0"/>

  <!-- Vehicle's initial pose -->
  <arg name="x"     default="0"/>
  <arg name="y"     default="0"/>
  <arg name="z"     default="-20"/>
  <arg name="roll"  default="0"/>
  <arg name="pitch" default="0"/>
  <arg name="yaw"   default="0"/>

  <arg name="use_geodetic" default="false"/>
  <arg name="latitude" default="0"/>
  <arg name="longitude" default="0"/>
  <arg name="depth" default="0"/>

  <arg name="latitude_ref" default="0"/>
  <arg name="longitude_ref" default="0"/>
  <arg name="altitude_ref" default="0"/>

  <!-- Mode to open different robot configurations as set the in file
  nomenclature standard for the files in /robots

  /robots/<mode>.xacro
  -->
  <arg name="mode" default="default"/>

  <!-- Vehicle's namespace -->
  <arg name="namespace" default="deepleng"/>

  <arg name="world_frame" default="world"/>


  <param name="robot_description" command="$(find xacro)/xacro.py '$(find deepleng_description)/robots/$(arg mode).xacro' debug:=$(arg debug)"/>
  <node name="urdf_spawner" pkg="uuv_descriptions" type="spawn_model" respawn="false" output="screen" args="-urdf -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) -model deepleng -param robot_description"/>
  <rosparam file="$(find deepleng_description)/config.yaml" command="load"/>
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="deepleng" args="joint_state_controller yaw_controller pitch_controller"/>

  <!-- A joint state publisher plugin already is started with the model, no need to use the default joint state publisher -->

  <!-- Publish robot model for ROS -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen">
    <param name="robot_description" value="/$(arg namespace)/robot_description" />
  </node>

  <!-- Publish state and tf for in relation to the world frame -->
  <include file="$(find uuv_assistants)/launch/message_to_tf.launch">
    	<arg name="namespace" value="$(arg namespace)"/>
  </include>

</launch>
